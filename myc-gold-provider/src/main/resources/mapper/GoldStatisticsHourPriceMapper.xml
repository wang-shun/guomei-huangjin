<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gomemyc.gold.dao.GoldStatisticsHourPriceDao">
  <resultMap id="BaseResultMap" type="com.gomemyc.gold.entity.GoldStatisticsHourPrice">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="price_date" jdbcType="DATE" property="priceDate"/>
    <result column="price_hour" jdbcType="INTEGER" property="priceHour" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="create_time" jdbcType="TIMESTAMP"  property="createTime" />
  </resultMap>
  
  <!-- Map拓展  -->
   <resultMap id="ExtendBaseResultMap" type="com.gomemyc.gold.entity.extend.GoldStatisticsHourPriceExtend" extends="BaseResultMap">
	    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
	    <result column="total_date" jdbcType="INTEGER" property="totalDate" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, price_date, price_hour, price, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_gold_statistics_hour_price
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_gold_statistics_hour_price
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.gomemyc.gold.entity.GoldStatisticsHourPrice">
    insert into tb_gold_statistics_hour_price (id, price_date, price_hour, 
      price, create_time)
    values (#{id,jdbcType=BIGINT}, #{priceDate,jdbcType=DATE}, #{priceHour,jdbcType=INTEGER}, 
      #{price,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gomemyc.gold.entity.GoldStatisticsHourPrice">
    insert into tb_gold_statistics_hour_price
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="priceDate != null">
        price_date,
      </if>
      <if test="priceHour != null">
        price_hour,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="priceDate != null">
        #{priceDate,jdbcType=DATE},
      </if>
      <if test="priceHour != null">
        #{priceHour,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gomemyc.gold.entity.GoldStatisticsHourPrice">
    update tb_gold_statistics_hour_price
    <set>
      <if test="priceDate != null">
        price_date = #{priceDate,jdbcType=DATE},
      </if>
      <if test="priceHour != null">
        price_hour = #{priceHour,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gomemyc.gold.entity.GoldStatisticsHourPrice">
    update tb_gold_statistics_hour_price
    set price_date = #{priceDate,jdbcType=DATE},
      price_hour = #{priceHour,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 根据开始日期查询统计数据-->
  <select id="selectListPageBeforePriceDate" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_gold_statistics_hour_price
    where #{currentDate,jdbcType=DATE} >= price_date ORDER  BY   price_date,price_hour ASC  limit #{offset},#{pageSize}
  </select>
  <select id="selectCountBeforePriceDate"  resultType="java.lang.Integer">
    select  count(1) from tb_gold_statistics_hour_price  where #{currentDate,jdbcType=DATE} >= price_date
  </select>
  <!--统计天的金价-->
  <select id="selectHourObjByPriceDate" resultMap="ExtendBaseResultMap">
    select  COALESCE(SUM(price),0.0) AS total_price ,COUNT(price_date) AS total_date,price_date
    from tb_gold_statistics_hour_price  where  price_date=#{currentDate,jdbcType=DATE}
  </select> 

</mapper>